"""
Django settings for course_app project.	
Generated by 'django-admin startproject' using Django 3.0.5.	
For more information on this file, see	
https://docs.djangoproject.com/en/3.0/topics/settings/	
For the full list of settings and their values, see	
https://docs.djangoproject.com/en/3.0/ref/settings/	
"""
import os
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)	
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))	
# Quick-start development settings - unsuitable for production	
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/	
# SECURITY WARNING: keep the secret key used in production secret!	
SECRET_KEY = '6oboz6ic^pw@-(6(4yx1d4&3h()j9xy9(h4+b&%+9lv37%=07$'	
# SECURITY WARNING: don't run with debug turned on in production!	
DEBUG = True	
ALLOWED_HOSTS = ['*']
AUTH_USER_MODEL = 'app.User'	
# Application definition

INSTALLED_APPS = [	
    'django.contrib.admin',	
    'django.contrib.auth',	
    'django.contrib.contenttypes',
    'django.contrib.sessions',	
    'django.contrib.sites',	
    'django.contrib.messages',	
    'django.contrib.staticfiles',	
    'allauth',
    'allauth.account',
    'rest_framework',	
    'rest_framework.authtoken',	
    'rest_auth',
    'rest_auth.registration',
    'oauth2_provider',	
    'corsheaders',	
    'course_app.api',	
    'course_app.app',	
]

SITE_ID = 1

CORS_ORIGIN_ALLOW_ALL = True

MIDDLEWARE = [	
    'corsheaders.middleware.CorsMiddleware',	
    'django.middleware.security.SecurityMiddleware',	
    'django.contrib.sessions.middleware.SessionMiddleware',	
    'django.middleware.common.CommonMiddleware',	
    'django.middleware.csrf.CsrfViewMiddleware',	
    'django.contrib.auth.middleware.AuthenticationMiddleware',	
    'django.contrib.messages.middleware.MessageMiddleware',	
    'django.middleware.clickjacking.XFrameOptionsMiddleware',	
    'oauth2_provider.middleware.OAuth2TokenMiddleware',	
]	
ROOT_URLCONF = 'course_app.urls'	
TEMPLATES = [	
    {	
        'BACKEND': 'django.template.backends.django.DjangoTemplates',	
        'DIRS': [os.path.join(BASE_DIR, 'templates')]	
        ,	
        'APP_DIRS': True,	
        'OPTIONS': {	
            'context_processors': [	
                'django.template.context_processors.debug',	
                'django.template.context_processors.request',	
                'django.contrib.auth.context_processors.auth',	
                'django.contrib.messages.context_processors.messages',	
            ],	
        },	
    },	
]	
WSGI_APPLICATION = 'course_app.wsgi.application'	
# Database	
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases	
DATABASES = {	
    'default': {	
        'ENGINE': 'django.db.backends.postgresql_psycopg2',	
        'HOST': os.environ.get('POSTGRES_ADDR', '127.0.0.1'),	
        'PORT': os.environ.get('POSTGRES_PORT', '5432'),	
        'NAME': os.environ.get('POSTGRES_DB', 'sportylife_14_11'),	
        'USER': os.environ.get('POSTGRES_USER', 'trackfindevents'),	
        'PASSWORD': os.environ.get('POSTGRES_PASSWORD', '12345'),	
    }	
}	
# Password validation	
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators	
AUTH_PASSWORD_VALIDATORS = [	
    {	
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',	
    },	
    {	
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',	
    },	
    {	
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',	
    },	
    {	
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',	
    },	
]	
# Internationalization	
# https://docs.djangoproject.com/en/3.0/topics/i18n/	
LANGUAGE_CODE = 'en-us'	
TIME_ZONE = 'UTC'	
USE_I18N = True	
USE_L10N = True	
USE_TZ = True	
# Static files (CSS, JavaScript, Images)	
# https://docs.djangoproject.com/en/3.0/howto/static-files/	
STATIC_URL = '/static/'	
REDIS_ADDR = os.environ.get('REDIS_ADDR', '127.0.0.1')	
REDIS_PORT = int(os.environ.get('REDIS_PORT', 6379))	
REDIS_PASSWORD = os.environ.get('REDIS_PASSWORD', '')	
CACHES = {	
    "default": {	
        "BACKEND": "django_redis.cache.RedisCache",	
        "LOCATION": 'redis://:{}@{}:{}/0'.format(	
            REDIS_PASSWORD, REDIS_ADDR, REDIS_PORT),	
        "TIMEOUT": int(os.environ.get('CACHE_TIMEOUT', '600')),	
        "OPTIONS": {	
            "CLIENT_CLASS": "django_redis.client.DefaultClient",	
        }	
    }	
}	
REST_FRAMEWORK = {	
    'DEFAULT_AUTHENTICATION_CLASSES': (	
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',	
    )	
}	
OAUTH2_PROVIDER = {	
    'OAUTH2_BACKEND_CLASS': 'oauth2_provider.oauth2_backends.JSONOAuthLibCore',	
    "ACCESS_TOKEN_EXPIRE_SECONDS": 2592000,	
    'SCOPES': {	
        'read': 'Read scope',	
        'write': 'Write scope',	
        'groups': 'Access to your groups'	
    }	
}	
# REST_AUTH_REGISTER_SERIALIZERS = {
#     'REGISTER_SERIALIZER': 'course_app.api.v1.serializers.UserRegisterSerializer'
# }


# AUTH settings	
USERNAME_FIELD = 'email'	
ACCOUNT_EMAIL_REQUIRED = True	
ACCOUNT_USER_MODEL_USERNAME_FIELD = None	
ACCOUNT_USERNAME_REQUIRED = False	
ACCOUNT_AUTHENTICATION_METHOD = 'email'	
ACCOUNT_EMAIL_VERIFICATION = 'none'


FACTOR_1 = os.environ.get('FACTOR_1', '0')
FACTOR_2 = os.environ.get('FACTOR_2', '0')
BETA = os.environ.get('BETA', '0')
SECURITY_PARAMETER = int(os.environ.get('SECURITY_PARAMETER', '0'))
